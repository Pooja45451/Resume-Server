const User=require('../models/userModel')
const jwt=require('jsonwebtoken')
const bcrypt=require("bcrypt");
const asyncHandler=require("express-async-handler");
const { eventNames } = require('../models/contactModel');

const userRegister=asyncHandler(async (req,res)=>
{
    

    const {userName,email,password}=req.body;
    if(!userName||!email)
     {
      res.status(400);
      throw new Error("All field are mandatory");
     }
    const userAvailable = await User.findOne({email});
    if(userAvailable)
     {
      res.status(400);
      throw new Error("User already register");
     }
    const hashPassword=await bcrypt.hash(password,10);
    console.log(hashPassword);

    const user= await User.create({userName,email,hashPassword});

    if(user)
    {
    res.status(201).json({_id:user._id,email:user.email});

    }
    else
    {
        res.status(400);
        throw new Error("")
    }

    
    res.json({message:"Register the user"})



}





);

const userLogin=asyncHandler(async (req,res)=>
{
   const {email,password} =req.body;
   if(!email || !password)
   {
    res.status(400);
    throw new Error("All fields are mandatory")
   }
   const user=await User.findOne({email});
   if(user && bcrypt.compare(password,user.password))
   {
    const accessToken=jwt.sign(
        {
           users:{
            userName:user.userName,
            email:user.email,
            id:user.id,

           },

        },process.env.ACCESS_TOKEN_SECERT,{expiresIn:"1m"});
        res.status(200).json(accessToken);
    }
    else 
    {
        res.status(401);
        throw new Error("Email or Password is not valid");
    }
}
);


const currentUser=asyncHandler(async (req,res)=>
{res.json({message:"Current user"})}
);

module.exports={userRegister,userLogin,currentUser};